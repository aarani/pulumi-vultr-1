// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Vultr VPC.
//
// ## Example Usage
//
// Get the information for a VPC by `description`:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vultr/sdk/go/vultr"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vultr.LookupVPC(ctx, &GetVPCArgs{
// 			Filters: []GetVPCFilter{
// 				GetVPCFilter{
// 					Name: "description",
// 					Values: []string{
// 						"my-vpc-description",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVPC(ctx *pulumi.Context, args *LookupVPCArgs, opts ...pulumi.InvokeOption) (*LookupVPCResult, error) {
	var rv LookupVPCResult
	err := ctx.Invoke("vultr:index/getVPC:getVPC", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVPC.
type LookupVPCArgs struct {
	// Query parameters for finding VPCs.
	Filters []GetVPCFilter `pulumi:"filters"`
}

// A collection of values returned by getVPC.
type LookupVPCResult struct {
	// The date the VPC was added to your Vultr account.
	DateCreated string `pulumi:"dateCreated"`
	// The VPC's description.
	Description string         `pulumi:"description"`
	Filters     []GetVPCFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the region that the VPC is in.
	Region string `pulumi:"region"`
	// The IPv4 network address. For example: 10.1.1.0.
	V4Subnet string `pulumi:"v4Subnet"`
	// The number of bits for the netmask in CIDR notation. Example: 20
	V4SubnetMask int `pulumi:"v4SubnetMask"`
}

func LookupVPCOutput(ctx *pulumi.Context, args LookupVPCOutputArgs, opts ...pulumi.InvokeOption) LookupVPCResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVPCResult, error) {
			args := v.(LookupVPCArgs)
			r, err := LookupVPC(ctx, &args, opts...)
			var s LookupVPCResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVPCResultOutput)
}

// A collection of arguments for invoking getVPC.
type LookupVPCOutputArgs struct {
	// Query parameters for finding VPCs.
	Filters GetVPCFilterArrayInput `pulumi:"filters"`
}

func (LookupVPCOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPCArgs)(nil)).Elem()
}

// A collection of values returned by getVPC.
type LookupVPCResultOutput struct{ *pulumi.OutputState }

func (LookupVPCResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPCResult)(nil)).Elem()
}

func (o LookupVPCResultOutput) ToLookupVPCResultOutput() LookupVPCResultOutput {
	return o
}

func (o LookupVPCResultOutput) ToLookupVPCResultOutputWithContext(ctx context.Context) LookupVPCResultOutput {
	return o
}

// The date the VPC was added to your Vultr account.
func (o LookupVPCResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVPCResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The VPC's description.
func (o LookupVPCResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVPCResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVPCResultOutput) Filters() GetVPCFilterArrayOutput {
	return o.ApplyT(func(v LookupVPCResult) []GetVPCFilter { return v.Filters }).(GetVPCFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVPCResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVPCResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the region that the VPC is in.
func (o LookupVPCResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVPCResult) string { return v.Region }).(pulumi.StringOutput)
}

// The IPv4 network address. For example: 10.1.1.0.
func (o LookupVPCResultOutput) V4Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVPCResult) string { return v.V4Subnet }).(pulumi.StringOutput)
}

// The number of bits for the netmask in CIDR notation. Example: 20
func (o LookupVPCResultOutput) V4SubnetMask() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVPCResult) int { return v.V4SubnetMask }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVPCResultOutput{})
}
