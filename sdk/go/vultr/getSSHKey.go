// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Vultr SSH key. This data source provides the name, public SSH key, and the creation date for your Vultr SSH key.
//
// ## Example Usage
//
// Get the information for an SSH key by `name`:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vultr/sdk/go/vultr"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vultr.LookupSSHKey(ctx, &GetSSHKeyArgs{
// 			Filters: []GetSSHKeyFilter{
// 				GetSSHKeyFilter{
// 					Name: "name",
// 					Values: []string{
// 						"my-ssh-key-name",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSSHKey(ctx *pulumi.Context, args *LookupSSHKeyArgs, opts ...pulumi.InvokeOption) (*LookupSSHKeyResult, error) {
	var rv LookupSSHKeyResult
	err := ctx.Invoke("vultr:index/getSSHKey:getSSHKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSSHKey.
type LookupSSHKeyArgs struct {
	// Query parameters for finding SSH keys.
	Filters []GetSSHKeyFilter `pulumi:"filters"`
}

// A collection of values returned by getSSHKey.
type LookupSSHKeyResult struct {
	// The date the SSH key was added to your Vultr account.
	DateCreated string            `pulumi:"dateCreated"`
	Filters     []GetSSHKeyFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the SSH key.
	Name string `pulumi:"name"`
	// The public SSH key.
	SshKey string `pulumi:"sshKey"`
}

func LookupSSHKeyOutput(ctx *pulumi.Context, args LookupSSHKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSSHKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSSHKeyResult, error) {
			args := v.(LookupSSHKeyArgs)
			r, err := LookupSSHKey(ctx, &args, opts...)
			return *r, err
		}).(LookupSSHKeyResultOutput)
}

// A collection of arguments for invoking getSSHKey.
type LookupSSHKeyOutputArgs struct {
	// Query parameters for finding SSH keys.
	Filters GetSSHKeyFilterArrayInput `pulumi:"filters"`
}

func (LookupSSHKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSSHKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSSHKey.
type LookupSSHKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSSHKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSSHKeyResult)(nil)).Elem()
}

func (o LookupSSHKeyResultOutput) ToLookupSSHKeyResultOutput() LookupSSHKeyResultOutput {
	return o
}

func (o LookupSSHKeyResultOutput) ToLookupSSHKeyResultOutputWithContext(ctx context.Context) LookupSSHKeyResultOutput {
	return o
}

// The date the SSH key was added to your Vultr account.
func (o LookupSSHKeyResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSSHKeyResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

func (o LookupSSHKeyResultOutput) Filters() GetSSHKeyFilterArrayOutput {
	return o.ApplyT(func(v LookupSSHKeyResult) []GetSSHKeyFilter { return v.Filters }).(GetSSHKeyFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSSHKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSSHKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the SSH key.
func (o LookupSSHKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSSHKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The public SSH key.
func (o LookupSSHKeyResultOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSSHKeyResult) string { return v.SshKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSSHKeyResultOutput{})
}
