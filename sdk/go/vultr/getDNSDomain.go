// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a DNS domain associated with your Vultr account.
//
// ## Example Usage
//
// Get the information for a DNS domain:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vultr/sdk/go/vultr"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vultr.LookupDNSDomain(ctx, &GetDNSDomainArgs{
// 			Domain: "example.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupDNSDomain(ctx *pulumi.Context, args *LookupDNSDomainArgs, opts ...pulumi.InvokeOption) (*LookupDNSDomainResult, error) {
	var rv LookupDNSDomainResult
	err := ctx.Invoke("vultr:index/getDNSDomain:getDNSDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDNSDomain.
type LookupDNSDomainArgs struct {
	// The name you're searching for.
	Domain string `pulumi:"domain"`
}

// A collection of values returned by getDNSDomain.
type LookupDNSDomainResult struct {
	// The date the DNS domain was added to your Vultr account.
	DateCreated string `pulumi:"dateCreated"`
	// The Domain's DNSSEC status
	DnsSec string `pulumi:"dnsSec"`
	// Name of domain.
	Domain string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupDNSDomainOutput(ctx *pulumi.Context, args LookupDNSDomainOutputArgs, opts ...pulumi.InvokeOption) LookupDNSDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDNSDomainResult, error) {
			args := v.(LookupDNSDomainArgs)
			r, err := LookupDNSDomain(ctx, &args, opts...)
			return *r, err
		}).(LookupDNSDomainResultOutput)
}

// A collection of arguments for invoking getDNSDomain.
type LookupDNSDomainOutputArgs struct {
	// The name you're searching for.
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (LookupDNSDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDNSDomainArgs)(nil)).Elem()
}

// A collection of values returned by getDNSDomain.
type LookupDNSDomainResultOutput struct{ *pulumi.OutputState }

func (LookupDNSDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDNSDomainResult)(nil)).Elem()
}

func (o LookupDNSDomainResultOutput) ToLookupDNSDomainResultOutput() LookupDNSDomainResultOutput {
	return o
}

func (o LookupDNSDomainResultOutput) ToLookupDNSDomainResultOutputWithContext(ctx context.Context) LookupDNSDomainResultOutput {
	return o
}

// The date the DNS domain was added to your Vultr account.
func (o LookupDNSDomainResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDNSDomainResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The Domain's DNSSEC status
func (o LookupDNSDomainResultOutput) DnsSec() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDNSDomainResult) string { return v.DnsSec }).(pulumi.StringOutput)
}

// Name of domain.
func (o LookupDNSDomainResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDNSDomainResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDNSDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDNSDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDNSDomainResultOutput{})
}
