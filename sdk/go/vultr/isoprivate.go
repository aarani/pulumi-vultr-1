// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ISOPrivate struct {
	pulumi.CustomResourceState

	DateCreated pulumi.StringOutput `pulumi:"dateCreated"`
	Filename    pulumi.StringOutput `pulumi:"filename"`
	Md5sum      pulumi.StringOutput `pulumi:"md5sum"`
	Sha512sum   pulumi.StringOutput `pulumi:"sha512sum"`
	Size        pulumi.IntOutput    `pulumi:"size"`
	Status      pulumi.StringOutput `pulumi:"status"`
	Url         pulumi.StringOutput `pulumi:"url"`
}

// NewISOPrivate registers a new resource with the given unique name, arguments, and options.
func NewISOPrivate(ctx *pulumi.Context,
	name string, args *ISOPrivateArgs, opts ...pulumi.ResourceOption) (*ISOPrivate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource ISOPrivate
	err := ctx.RegisterResource("vultr:index/iSOPrivate:ISOPrivate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetISOPrivate gets an existing ISOPrivate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetISOPrivate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ISOPrivateState, opts ...pulumi.ResourceOption) (*ISOPrivate, error) {
	var resource ISOPrivate
	err := ctx.ReadResource("vultr:index/iSOPrivate:ISOPrivate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ISOPrivate resources.
type isoprivateState struct {
	DateCreated *string `pulumi:"dateCreated"`
	Filename    *string `pulumi:"filename"`
	Md5sum      *string `pulumi:"md5sum"`
	Sha512sum   *string `pulumi:"sha512sum"`
	Size        *int    `pulumi:"size"`
	Status      *string `pulumi:"status"`
	Url         *string `pulumi:"url"`
}

type ISOPrivateState struct {
	DateCreated pulumi.StringPtrInput
	Filename    pulumi.StringPtrInput
	Md5sum      pulumi.StringPtrInput
	Sha512sum   pulumi.StringPtrInput
	Size        pulumi.IntPtrInput
	Status      pulumi.StringPtrInput
	Url         pulumi.StringPtrInput
}

func (ISOPrivateState) ElementType() reflect.Type {
	return reflect.TypeOf((*isoprivateState)(nil)).Elem()
}

type isoprivateArgs struct {
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a ISOPrivate resource.
type ISOPrivateArgs struct {
	Url pulumi.StringInput
}

func (ISOPrivateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*isoprivateArgs)(nil)).Elem()
}

type ISOPrivateInput interface {
	pulumi.Input

	ToISOPrivateOutput() ISOPrivateOutput
	ToISOPrivateOutputWithContext(ctx context.Context) ISOPrivateOutput
}

func (*ISOPrivate) ElementType() reflect.Type {
	return reflect.TypeOf((**ISOPrivate)(nil)).Elem()
}

func (i *ISOPrivate) ToISOPrivateOutput() ISOPrivateOutput {
	return i.ToISOPrivateOutputWithContext(context.Background())
}

func (i *ISOPrivate) ToISOPrivateOutputWithContext(ctx context.Context) ISOPrivateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISOPrivateOutput)
}

// ISOPrivateArrayInput is an input type that accepts ISOPrivateArray and ISOPrivateArrayOutput values.
// You can construct a concrete instance of `ISOPrivateArrayInput` via:
//
//          ISOPrivateArray{ ISOPrivateArgs{...} }
type ISOPrivateArrayInput interface {
	pulumi.Input

	ToISOPrivateArrayOutput() ISOPrivateArrayOutput
	ToISOPrivateArrayOutputWithContext(context.Context) ISOPrivateArrayOutput
}

type ISOPrivateArray []ISOPrivateInput

func (ISOPrivateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ISOPrivate)(nil)).Elem()
}

func (i ISOPrivateArray) ToISOPrivateArrayOutput() ISOPrivateArrayOutput {
	return i.ToISOPrivateArrayOutputWithContext(context.Background())
}

func (i ISOPrivateArray) ToISOPrivateArrayOutputWithContext(ctx context.Context) ISOPrivateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISOPrivateArrayOutput)
}

// ISOPrivateMapInput is an input type that accepts ISOPrivateMap and ISOPrivateMapOutput values.
// You can construct a concrete instance of `ISOPrivateMapInput` via:
//
//          ISOPrivateMap{ "key": ISOPrivateArgs{...} }
type ISOPrivateMapInput interface {
	pulumi.Input

	ToISOPrivateMapOutput() ISOPrivateMapOutput
	ToISOPrivateMapOutputWithContext(context.Context) ISOPrivateMapOutput
}

type ISOPrivateMap map[string]ISOPrivateInput

func (ISOPrivateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ISOPrivate)(nil)).Elem()
}

func (i ISOPrivateMap) ToISOPrivateMapOutput() ISOPrivateMapOutput {
	return i.ToISOPrivateMapOutputWithContext(context.Background())
}

func (i ISOPrivateMap) ToISOPrivateMapOutputWithContext(ctx context.Context) ISOPrivateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ISOPrivateMapOutput)
}

type ISOPrivateOutput struct{ *pulumi.OutputState }

func (ISOPrivateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ISOPrivate)(nil)).Elem()
}

func (o ISOPrivateOutput) ToISOPrivateOutput() ISOPrivateOutput {
	return o
}

func (o ISOPrivateOutput) ToISOPrivateOutputWithContext(ctx context.Context) ISOPrivateOutput {
	return o
}

type ISOPrivateArrayOutput struct{ *pulumi.OutputState }

func (ISOPrivateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ISOPrivate)(nil)).Elem()
}

func (o ISOPrivateArrayOutput) ToISOPrivateArrayOutput() ISOPrivateArrayOutput {
	return o
}

func (o ISOPrivateArrayOutput) ToISOPrivateArrayOutputWithContext(ctx context.Context) ISOPrivateArrayOutput {
	return o
}

func (o ISOPrivateArrayOutput) Index(i pulumi.IntInput) ISOPrivateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ISOPrivate {
		return vs[0].([]*ISOPrivate)[vs[1].(int)]
	}).(ISOPrivateOutput)
}

type ISOPrivateMapOutput struct{ *pulumi.OutputState }

func (ISOPrivateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ISOPrivate)(nil)).Elem()
}

func (o ISOPrivateMapOutput) ToISOPrivateMapOutput() ISOPrivateMapOutput {
	return o
}

func (o ISOPrivateMapOutput) ToISOPrivateMapOutputWithContext(ctx context.Context) ISOPrivateMapOutput {
	return o
}

func (o ISOPrivateMapOutput) MapIndex(k pulumi.StringInput) ISOPrivateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ISOPrivate {
		return vs[0].(map[string]*ISOPrivate)[vs[1].(string)]
	}).(ISOPrivateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ISOPrivateInput)(nil)).Elem(), &ISOPrivate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ISOPrivateArrayInput)(nil)).Elem(), ISOPrivateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ISOPrivateMapInput)(nil)).Elem(), ISOPrivateMap{})
	pulumi.RegisterOutputType(ISOPrivateOutput{})
	pulumi.RegisterOutputType(ISOPrivateArrayOutput{})
	pulumi.RegisterOutputType(ISOPrivateMapOutput{})
}
