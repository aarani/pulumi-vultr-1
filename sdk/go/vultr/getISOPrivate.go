// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about an ISO file uploaded to your Vultr account.
//
// ## Example Usage
//
// Get the information for a ISO file by `filename`:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vultr/sdk/go/vultr"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vultr.LookupISOPrivate(ctx, &GetISOPrivateArgs{
// 			Filters: []GetISOPrivateFilter{
// 				GetISOPrivateFilter{
// 					Name: "filename",
// 					Values: []string{
// 						"my-iso-filename",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupISOPrivate(ctx *pulumi.Context, args *LookupISOPrivateArgs, opts ...pulumi.InvokeOption) (*LookupISOPrivateResult, error) {
	var rv LookupISOPrivateResult
	err := ctx.Invoke("vultr:index/getISOPrivate:getISOPrivate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getISOPrivate.
type LookupISOPrivateArgs struct {
	// Query parameters for finding ISO files.
	Filters []GetISOPrivateFilter `pulumi:"filters"`
}

// A collection of values returned by getISOPrivate.
type LookupISOPrivateResult struct {
	// The date the ISO file was added to your Vultr account.
	DateCreated string `pulumi:"dateCreated"`
	// The ISO file's filename.
	Filename string                `pulumi:"filename"`
	Filters  []GetISOPrivateFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The md5 hash of the ISO file.
	Md5sum string `pulumi:"md5sum"`
	// The sha512 hash of the ISO file.
	Sha512sum string `pulumi:"sha512sum"`
	// The size of the ISO file in bytes.
	Size int `pulumi:"size"`
	// The status of the ISO file.
	Status string `pulumi:"status"`
}

func LookupISOPrivateOutput(ctx *pulumi.Context, args LookupISOPrivateOutputArgs, opts ...pulumi.InvokeOption) LookupISOPrivateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupISOPrivateResult, error) {
			args := v.(LookupISOPrivateArgs)
			r, err := LookupISOPrivate(ctx, &args, opts...)
			return *r, err
		}).(LookupISOPrivateResultOutput)
}

// A collection of arguments for invoking getISOPrivate.
type LookupISOPrivateOutputArgs struct {
	// Query parameters for finding ISO files.
	Filters GetISOPrivateFilterArrayInput `pulumi:"filters"`
}

func (LookupISOPrivateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupISOPrivateArgs)(nil)).Elem()
}

// A collection of values returned by getISOPrivate.
type LookupISOPrivateResultOutput struct{ *pulumi.OutputState }

func (LookupISOPrivateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupISOPrivateResult)(nil)).Elem()
}

func (o LookupISOPrivateResultOutput) ToLookupISOPrivateResultOutput() LookupISOPrivateResultOutput {
	return o
}

func (o LookupISOPrivateResultOutput) ToLookupISOPrivateResultOutputWithContext(ctx context.Context) LookupISOPrivateResultOutput {
	return o
}

// The date the ISO file was added to your Vultr account.
func (o LookupISOPrivateResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The ISO file's filename.
func (o LookupISOPrivateResultOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.Filename }).(pulumi.StringOutput)
}

func (o LookupISOPrivateResultOutput) Filters() GetISOPrivateFilterArrayOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) []GetISOPrivateFilter { return v.Filters }).(GetISOPrivateFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupISOPrivateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The md5 hash of the ISO file.
func (o LookupISOPrivateResultOutput) Md5sum() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.Md5sum }).(pulumi.StringOutput)
}

// The sha512 hash of the ISO file.
func (o LookupISOPrivateResultOutput) Sha512sum() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.Sha512sum }).(pulumi.StringOutput)
}

// The size of the ISO file in bytes.
func (o LookupISOPrivateResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) int { return v.Size }).(pulumi.IntOutput)
}

// The status of the ISO file.
func (o LookupISOPrivateResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupISOPrivateResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupISOPrivateResultOutput{})
}
